import pygame
import os
import random


class Settings:
    window_width = 900
    window_height = 700
    window_border2 = 0
    enemy_nof_cols = 5
    file_path = os.path.dirname(os.path.abspath(__file__))
    image_path = os.path.join(file_path, "images")
    
class Background(object):
    def __init__(self, filename):
        self.image = pygame.image.load(os.path.join(Settings.image_path, filename))
        self.image = pygame.transform.scale(self.image, (Settings.window_width, Settings.window_height)).convert()
        self.rect = self.image.get_rect()
        
    def draw(self, screen):
        screen.blit(self.image, self.rect) 


class Flugzeug(pygame.sprite.Sprite):
    def __init__(self, filename):
        super().__init__()
        bitmap = pygame.image.load(os.path.join(Settings.image_path, filename))
        self.image = bitmap.convert_alpha()
        self.image = pygame.transform.scale(self.image, (75, 75)).convert_alpha()
        self.rect = self.image.get_rect()
        self.rect.centerx = (Settings.window_width - 75) // 2
        self.rect.bottom = Settings.window_height - Settings.window_border2 -10
        self.direction = 0
        self.direction2 = 0
        self.random1 = 0
        self.random2 = 0
        self.speed = 3
        

        
    def update(self):
        newrect = self.rect.move(self.direction * self.speed, 0)
        if newrect.left <= Settings.window_border2:
            self.move_stop()
        if newrect.right >= Settings.window_width - Settings.window_border2:
            self.move_stop()
        self.rect.move_ip(self.direction * self.speed, 0)
        
        

    def move_left(self):
        self.direction = -1
        
    def move_right(self):
        self.direction = 1


    def update2(self):
        newrect = self.rect.move(0, self.direction2 * self.speed)
        if newrect.top <= Settings.window_border2:
             self.move_stop()
        if newrect.bottom >= Settings.window_height - Settings.window_border2:
             self.move_stop()
        self.rect.move_ip(0, self.direction2 * self.speed)
        

        
    def move_up(self):
        self.direction2 = -1

    def move_down(self):
        self.direction2 = 1
        
    def move_stop(self):
        self.direction = 0
        self.direction2 = 0
        self.random1 = 0
        self.random2 = 0

    def update3(self):
        newrect = self.rect.move(self.random1, self.random2)
        if newrect.top <= Settings.window_border2:
             self.move_stop()
        if newrect.bottom >= Settings.window_height - Settings.window_border2:
             self.move_stop()
        if newrect.left <= Settings.window_border2:
            self.move_stop()
        if newrect.right >= Settings.window_width - Settings.window_border2:
            self.move_stop()
        self.rect.move_ip(self.random1, self.random2)


    def move_random(self):
        self.rect.centerx = random.randint(75, 825)
        self.random1 = self.rect.centerx
        self.rect.bottom = random.randint(75, 625)
        self.random2 = self.rect.bottom
        print(self.random1)
        print(self.random2)



        

if __name__ == '__main__':
    pygame.init()
    
    screen = pygame.display.set_mode((Settings.window_width, Settings.window_height))
    clock = pygame.time.Clock()
    
    
    all_sprites = pygame.sprite.Group()
    
    background = Background("background.png")
    flugzeug = Flugzeug("flugzeug.png")
    all_sprites.add(flugzeug)
    
    
    
    
    running = True
    while running:
        clock.tick(60)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    flugzeug.move_left()
                elif event.key == pygame.K_RIGHT:
                    flugzeug.move_right()
                elif event.key == pygame.K_UP:
                    flugzeug.move_up()
                elif event.key == pygame.K_DOWN:
                    flugzeug.move_down()
                elif event.key == pygame.K_SPACE:
                    flugzeug.move_random()
            elif event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT or event.key == pygame.K_UP or event.key == pygame.K_DOWN  or event.key == pygame.K_SPACE:
                    flugzeug.move_stop()


        flugzeug.update()
        flugzeug.update2()
        flugzeug.update3()
        
        background.draw(screen)
        all_sprites.draw(screen)
        pygame.display.flip()
        
    pygame.quit()
